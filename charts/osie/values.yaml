# Default values for osie.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

global:
  ingress:
    enabled: true
    hostname: ""
    ingressClassName: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    secrets: []
    tls: true

api:
  component: "api"
  replicaCount: 2
  image:
    repository: ghcr.io/osie-io/osie-api
    pullPolicy: Always
  httpContext: /api-v1
  ingress:
    path: "{{ .Values.api.httpContext }}"
    pathType: Prefix
    servicePort: http
    hostname: ""
  podAnnotations: { }
  podSecurityContext: { }
  # fsGroup: 2000
  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  service:
    type: ClusterIP
    port: 8080
  resources: { }
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

ui:
  component: "ui"
  replicaCount: 2
  image:
    repository: ghcr.io/osie-io/osie-ui
    pullPolicy: Always
  ingress:
    path: /
    pathType: Prefix
    servicePort: http
    hostname: ""
  oauth2:
    clientId: "osie-ui"
    realm: "master"
  podAnnotations: { }
  podSecurityContext: { }
  # fsGroup: 2000
  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  service:
    type: ClusterIP
    port: 80
  resources: { }
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

admin:
  component: "admin"
  replicaCount: 2
  image:
    repository: ghcr.io/osie-io/osie-admin
    pullPolicy: Always
  ingress:
    path: /osie_admin
    pathType: Prefix
    servicePort: http
    hostname: ""
  oauth2:
    clientId: "osie-admin"
    realm: "admins"
  podAnnotations: { }
  podSecurityContext: { }
  # fsGroup: 2000
  securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  service:
    type: ClusterIP
    port: 80
  resources: { }
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }


license:
  key: ""

encryption:
  # available options: bcrypt, awskms
  provider: "bcrypt"
  bcrypt:
    password: ""
    existingPasswordSecret: ""
    existingPasswordSecretKey: ""

keycloak:
  enabled: true
  replicaCount: 3
  component: "keycloak"
  ingress:
    hostname: "auth.{{ .Values.global.ingress.hostname }}"
  service:
    type: ClusterIP

  # Credentials for Osie to access the Keycloak Admin API


  auth:
    adminUser: osie_admin

  postgresql:
    enabled: true
    architecture: replication
    auth:
      username: osie_keycloak
      database: osie_keycloak
      replicationUsername: osie_pg_repl

  keycloakConfigCli:
    enabled: true
    command:
      - java
      - -jar
      - /opt/bitnami/keycloak-config-cli/keycloak-config-cli-21.0.1.jar
    existingConfigmap: '{{ include "osie.keycloakRealmConfigMap" . }}'

  initContainers: |-
    - name: osie-keywind-theme 
      image: ghcr.io/osie-io/osie-keywind:0.1.0-rc1
      imagePullPolicy: Always
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying theme..."
          cp -R /theme/* /keycloak-theme
      volumeMounts:
        - name: keycloak-theme 
          mountPath: /keycloak-theme

  extraVolumeMounts: |-
    - name: keycloak-theme 
      mountPath: /opt/bitnami/keycloak/themes/osie

  extraVolumes: |-
    - name: keycloak-theme 
      emptyDir: {}

  extraEnvVars:
    - name: KEYCLOAK_EXTRA_ARGS
      value: "--features=preview"

externalOpenid:
  issuer: ""
  adminIssuer: ""

redis:
  enabled: true

externalRedis:
  host: ""
  port: 6379
  password: ""
  existingSecret: ""
  existingSecretPasswordKey: ""

mongodb:
  enabled: true
  architecture: replicaset
  replicaCount: 3
  auth:
    usernames:
      - osie
    databases:
      - osie

externalMongodb:
  hosts: ""
  database: ""
  username: ""
  existingSecret: ""
  existingSecretPasswordKey: ""

rabbitmq:
  enabled: true

externalRabbitmq:
  host: ""
  port: 5672
  username: ""
  password: ""
  vhost: "/"
  existingSecret: ""
  existingSecretPasswordKey: ""

sentry:
  dsn: ""

